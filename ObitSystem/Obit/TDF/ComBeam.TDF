; $Id$
; ComBeam
;---------------------------------------------------------------
;! Combine Beam images
;# Obit Task 
;-----------------------------------------------------------------------
;;  Copyright (C) 2010
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning Obit should be addressed as follows:
;;         Internet email: bcotton@nrao.edu.
;;         Postal address: Bill Cotton
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
ComBeam  LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
ComBeam:  Combine Beam images
**PARAM** str 4
DataType                          "FITS" or "AIPS" type of input
**PARAM** int   1
numImage                           Number of input beam images
**PARAM** str 48
inFile                             Filename 1 if FITS image
**PARAM** str 12
inName                             Image Name (Name) 1
**PARAM** str 8
inClass                            Image Name (Class) 1
**PARAM** int   1
inSeq             0         9999   Image Name (Seq. #) 1
**PARAM** int   1
inDisk            0         9999   Disk drive # 1
**PARAM** str 48
in2File                            Filename 2 if FITS image
**PARAM** str 12
in2Name                            Image Name (Name) 2
**PARAM** str 8
in2Class                           Image Name (Class) 2
**PARAM** int   1
in2Seq           0          9999   Image Name (Seq. #) 2
**PARAM** int   1
in2Disk           0         9999   Disk drive # 2
**PARAM** str 48
in3File                            Filename 3 if FITS image
**PARAM** str 12
in3Name                            Image Name (Name) 3
**PARAM** str 8
in3Class                           Image Name (Class) 3
**PARAM** int   1
in3Seq            0         9999   Image Name (Seq. #) 3
**PARAM** int   1
in3Disk           0         9999   Disk drive # 3
**PARAM** str 48
in4File                            Filename 4 if FITS image
**PARAM** str 12
in4Name                            Image Name (Name) 4
**PARAM** str 8
in4Class                           Image Name (Class) 4
**PARAM** int   1
in4Seq            0         9999   Image Name (Seq. #) 4
**PARAM** int   1
in4Disk           0         9999   Disk drive # 4
**PARAM** str 48
in5File                            Filename 5 if FITS image
**PARAM** str 12
in5Name                            Image Name (Name) 5
**PARAM** str 8
in5Class                           Image Name (Class) 5
**PARAM** int   1
in5Seq            0         9999   Image Name (Seq. #) 5
**PARAM** int   1
in5Disk           0         9999   Disk drive # 5
**PARAM** str 48
in6File                            Filename 6 if FITS image
**PARAM** str 12
in6Name                            Image Name (Name) 6
**PARAM** str 8
in6Class                           Image Name (Class) 6
**PARAM** int   1
in6Seq            0         9999   Image Name (Seq. #) 6
**PARAM** int   1
in6Disk           0         9999   Disk drive # 6
**PARAM** str 48
in7File                            Filename 7 if FITS image
**PARAM** str 12
in7Name                            Image Name (Name) 7
**PARAM** str 8
in7Class                           Image Name (Class) 7
**PARAM** int   1
in7Seq            0         9999   Image Name (Seq. #) 7
**PARAM** int   1
in7Disk           0         9999   Disk drive # 7
**PARAM** str 48
in8File                            Filename 8 if FITS image
**PARAM** str 12
in8Name                            Image Name (Name) 8
**PARAM** str 8
in8Class                           Image Name (Class) 8
**PARAM** int   1
in8Seq            0         9999   Image Name (Seq. #) 8
**PARAM** int   1
in8Disk           0         9999   Disk drive # 8
**PARAM** str 48
in9File                            Filename 9 if FITS image
**PARAM** str 12
in9Name                            Image Name (Name) 9
**PARAM** str 8
in9Class                           Image Name (Class) 9
**PARAM** int   1
in9Seq            0         9999   Image Name (Seq. #) 9
**PARAM** int   1
in9Disk           0         9999   Disk drive # 9
**PARAM** str 48
in10File                           Filename 10 if FITS image
**PARAM** str 12
in10Name                           Image Name (Name) 10
**PARAM** str 8
in10Class                          Image Name (Class) 10
**PARAM** int   1
in10Seq           0         9999   Image Name (Seq. #) 10
**PARAM** int   1
in10Disk          0         9999   Disk drive # 10
**PARAM** str 48
outFile                            Output Filename if FITS image
**PARAM** str 4
outDType                            "FITS" or "AIPS" type of output
**PARAM** str 12
outName                            Output Image Name
**PARAM** str 8
outClass                           Output Image Class
**PARAM** int   1
outSeq            0         9999   Output Image Seq. #
**PARAM** int   1
outDisk           0         9999   output Disk drive
**PARAM** int 1 
nx                                 Number of "X" (RA) pixels in image 
**PARAM** int 1
ny                                 Number of "Y" (Dec) pixels in image. 
**PARAM** int 1
nfreq                              Number of frequency planes in image. 
**PARAM** float 1
xCells                             Image cell spacing in X in asec.
**PARAM** float 1
yCells                             Image cell spacing in Y in asec.
**PARAM** float 1
deltFreq                           Frequency spacing of planes (Hz).
**PARAM** dbl   1 **DEF** -1000.0
refFreq                            Reference frequency (plane 1) (Hz).
**PARAM** str 128
taskLog                            Logfile to write task messages to
**PARAM** int 10
noScrat                            AIPS disk numbers for which
                                   scratch files are disallowed
----------------------------------------------------------------
ComBeam
Type: Task
Use:     ComBeam takes up to 10 input beam images and interpolates
them into multiple planes of an output beam image.
Beam images are expected in the form produced by MapBeam, the 
third axis is an "IF" with the frequency offset given in the FQ 
table.
The output image has the same structure
Output images are the weighted average of the input planes scaled
to the output plane frequency.  
Weighting is inverse to the difference in frequency between the 
input and output planes.

Adverbs:
  DataType...."FITS" or AIPS
  numImage....Number of input images
  in?Name.....In Image Name(Name). ? = 1->numImage   
              1 dropped for first input 
  in?Class....In Image Name(Class).?  = 1->numImage        
  in?Seq......In Image Name(Seq. #).?       0 => highest.
  in?Disk.....In Disk drive # of image."    0 => any.
  in?File.....Input File Name if a FITS file
  outDType...'FITS' or 'AIPS'  type of output
              Defaults to DataType.
  outName.....Output Image Name(Name).         
  outClass....Output Image Name(Class).        
  outSeq......Output Image Name(Seq. #).       0 => highest.
  outDisk.....Output Disk drive # of image.    0 => any.
  outFile.....Output File Name if a FITS file
  nx..........Number of x pixels.
  ny......... Number of y pixels.
  nfreq.......Number of frequency planes in output image.
  xCells......Image cell spacing in X in asec.  
  yCells......Image cell spacing in Y in asec. 
  deltFreq....Increment in frequency (Hz) between output planes
  refFreq.....Reference frequency, that of plane 1 (Hz)
  taskLog.....Log file to write messages to INSTEAD of the terminal
              This is useful in long runs or batch files.
              Path is absolute or relative to where the task 
              executes.
  noScrat.....A list of AIPS disk numbers on which you do not 
              wish scratch files
----------------------------------------------------------------
