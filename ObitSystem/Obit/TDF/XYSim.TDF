; XYSim
;---------------------------------------------------------------
;! Generate sample UV coverage for XY feeds
;# TASK ANALYSIS UV
;-----------------------------------------------------------------------
;;  Copyright (C) 2025
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning Obit should be addressed as follows:
;;         Internet email: bcotton@nrao.edu.
;;         Postal address: W. D. Cotton
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
XYSim     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
XYSim     Task to generate simulates UV data for XY Feeds
**PARAM** str 4
DataType                           "FITS" or "AIPS" type
**PARAM** str 10  **DEF** 2000-01-01
refDate                            reference day YYYY-MM-DD
**PARAM** float 2
timeRange                          Time range to add.
**PARAM** float 1 **DEF** 1.0
delTime                            Time increment (sec)
**PARAM** float 2
UVRange         0.                 Min & max baseline (klambda)
**PARAM** str 16  **DEF** Target
Source                             Source name
**PARAM** dbl 1
RA                                 Source RA (2000) (deg)
**PARAM** dbl 1
Dec                                Source Dec (2000) (deg)
**PARAM** float 1 **DEF** 10.0
minEl                              Minimum elevation (deg)
**PARAM** dbl 1   **DEF** 0.86e9
refFreq                            Reference Frequency (Hz)
**PARAM** int 1   **DEF** 119
nFreq                              Number of frequency channels
**PARAM** float 1 **DEF** 0.836e6
delFreq                            Channel Width Frequency (Hz)
**PARAM** int 1   **DEF** 8
nIF                                Number of IFs
**PARAM** float 1 **DEF** 99.5e6 
delIF                              Separation between IFs (Hz)
**PARAM** dbl 3 
arrayXYZ                           Array Earth centered XYZ
**PARAM** int 1   **DEF** 64
nAnts                              Number of Antennas
**PARAM** dbl 3 240
antXYZ                             Antenna XYZ from ArrayXYZ
**PARAM** str 8 240
antName                            Antenna names, blank=>'ANtnnn
**PARAM** float 1 
Noise                              Gaussian noise sigma to add to vis.

                                   Source model to add
**PARAM** float 4
IQUV                               Point source I.Q,U,V (Jy)
**PARAM** str 4
DataType2                           "FITS" or "AIPS" type of model
**PARAM** str 48
in2File                            FITS input image if Type=='FITS'
**PARAM** str 12
in2Name                            Cleaned map AIPS name
**PARAM** str 6
in2Class                           Cleaned map AIPS class
**PARAM** int 1
in2Seq            0.0     9999.0   Cleaned AIPS seq. #
**PARAM** int 1
in2Disk                            Cleaned map disk unit #
**PARAM** int 1   **DEF** 0
nmaps             0.0     4192.0   No. fields to use for model.
**PARAM** int 1
CCVer            -1.0    46655.0   CC file version #.
**PARAM** int 64
BComp                              First CLEAN comp to add.
                                   1 per field.
**PARAM** int 64
EComp                              Last CLEAN comp to add
                                   to use (0 => all)
**PARAM** float 1
Flux                               Lowest summed CC component to use
**PARAM** str 4
Cmethod                            Modeling method:
                                   'DFT','GRID','    '
**PARAM** str 4
Cmodel                             Model type: 'COMP','IMAG'
                                   (see Help re images)
**PARAM** float 1 **DEF** 1.0
Factor                             Factor times CLEAN fluxes.
**PARAM** float 1  
modelFlux        0.0               Model flux density (Jy)
**PARAM** float 2  
modelPos        0.0                Model position offset (asec)
**PARAM** float 8  
modelParm                          Model parameters (maj, min, pa, type)
**PARAM** boo 1
mrgCC                              Merge CC table CCVer?
**PARAM** boo 1  **DEF** T
PBCor                              If true, apply freq. 
                                   dep. pri. beam corr
**PARAM** float 1  **DEF** 24.5
antSize                            Pri. antenna size (m) to use
                                   alpha, beta...
**PARAM** str 4
outDType                           "FITS" or "AIPS" type of output
**PARAM** str 48
outFile                            FITS output uvdata if Type=='FITS'
**PARAM** str 12
outName                            Output UV AIPS file name
**PARAM** str 6
outClass                           Output UV AIPS file class
**PARAM** int 1
outSeq           -1.0     9999.0   Output UV AIPS fileseq. #
**PARAM** int 1
outDisk                            Output UV file disk unit #.
**PARAM** boo 1 
Compress                           True => write compressed data
**PARAM** int 1 **DEF** 1
nThreads            0              Number of threads to use
**PARAM** str 128
taskLog                            Logfile to write task messages to
**PARAM** int 10
noScrat                            AIPS disk numbers for which
                                   scratch files are disallowed
----------------------------------------------------------------
XYSim
Task:
   Create a UV data set with specified parameters for antenna with 
XY feeds.  If the output file exists, new entries will be appended 
to the end of the file. 
   Optionally noise and a source model can be added.
Data are given zero visibility and unit weight or,
possibly a polarized model in IQUV.
A run of XYSim essentially creates a single scan, multiple scans 
with different multiple sources are allowed.
    NOTE: This does not rotate in [u,v] such that north of the 
standard equinox (J2000.0) is aligned with the v axis.  
If this matters, use refDate="2000-01-01"
   If multiple scans are included, they should be added strictly in 
time order, else the data should be sorted.  
For true multisource files, the data should be indexed.
Adverbs:
  refDate....Reference day as "YYYY-MM-DD", best if "2000-01-01"
  timeRange..Time range of the data to be simulated. In order:
             Start and end times in days relative to ref. date.  
             Use  dhms2day to convert from human readable form
             Times are wrt 0 UT on refDate
  delTime....Time increment between data samples (sec)
  UVRange....(Minimum,Maximum) baseline (kilo-lambda) accept
             at reference Frequency (default all)
  Source.....Name of source
  RA.........J2000 Right ascension of source (deg)
             Use UVDesc.PHMS2RA to convert from human form
  Dec........J2000 Declination of source (deg)
             Use UVDesc.PDMS2Dec to convert from human form
  minEl......Minimum elevation (deg) to include
  refFreq....Number of frequency channels
  nFreq .....Reference Frequency (Hz) at Ch 1
  delFreq....Channel bandwidth
  nIF .......Number of IFs
  delIF......Frequency increment between IFs
  arrayXYZ...Earth centered XYZ (m) of array center, default:
             [0.,0.,0.]
  nAnts......Number of antennas in AntXYZ
  antXYZ.....Array of XYZ (m) offsets from ArrayXYZ
             See Explain for MeerKAT

  Noise......Gaussian sigma of noise to add to each visibility

                  Source model
  IQUV.......Stokes I,Q,U,V for point source at phase center.
  in2Name....Model AIPS name .      Standard defaults.
  in2Class...Model AIPS class .     Standard defaults.
  in2Seq.....Model AIPS seq. # .    0 => highest.
  in2Disk....Disk drive # of model (FITS or AIPS). NO default
  in2File....FITS input root if Type=='FITS'
             Any digits should be left off the end of the name as 
             the 0-rel field number is added (no leading zeroes).
  nmaps......Number of image files to use for model.  If more than one
             file is to be used, the Name, Class, Disk and Seq of the
             subsequent image files will be the same as the first file
             except that the LAST two characters of the Class will be
             '01' thru 'E7' for files number 2 thru 4192.  Maximum 4192.
  CCVer......CC file ver. number.          0 => highest.
  BComp......The first clean component to process. One value is
             specified for each field used.
  EComp......highest CLEAN comps. to use for model. ALL 0 => all.
             This array has one value per field up to 64 fields.  All
             components are used for fields > 64.
             If any EComp[i] < 0, then components are only used up to
             the first negative in each field.
  Flux.......Only components > Flux are used in the model.
  Cmethod....This determines the method used to compute the
             model visibility values.
             'DFT' uses the direct Fourier transform, this
             method is the most accurate.
             'GRID' does a gridded-FFT interpolation model
             computation.
             '    ' allows the program to use the fastest
             method.
  Cmodel.....This indicates the type of input model; 'COMP' means that
             the input model consists of Clean components, 'IMAG'
             indicates that the input model consists of images.  If
             Cmodel is '   ' Clean components will be used if present
             and the image if not.  Note that Clean images do not make
             good models.  The Clean components have been convolved with
             the Gaussian Clean beam making their Fourier transform be
             rather tapered compared to the original uv data.
  Factor.....This value will be multiplied times the CLEAN component
             flux densities before subtraction. 
             If the image is not in Jy/pixel, Factor should be
             used to convert to those units.  Note that a Gaussian beam
             has area 1.1331 * Major_axis * Minor_axis / (axis_incr)**2
             pixels for square pixels.  
  modelParm..Other model parameters 
             modelParm[3] = 0; Point - no other parameters
             modelParm[3] = 1; Gaussian on sky:
               [0:2] = major_axis (asec),  minor_axis (asec),  
               position_angle (deg),
             modelParm[3] = 3; Uniform sphere:
               [0] =  radius (asec)
             modelParm[4+] = spectral index, curvature...
             If giving spectral terms, add 10 to  modelParm[3]
  mrgCC......If True, then merge each CC table CCVer before 
           . subtracting (one per field). In each table, all 
           . components on a given cell have their fluxes summed 
          .  resulting in a single entry per cell,
  PBCor......If true, apply frequency dependent primary beam 
          .  corrections.  Default True
  antSize....Primary antenna size (m) to use for PBCor def. 25

  
  outDType..'FITS' or 'AIPS'  type of output
  outName....Output UV AIPS file name    Standard defaults.
  outClass...Output UV AIPS file class.  Standard defaults.
  outSeq.....Output UV AIPS file seq. #. 0 => highest unique.
  outDisk....Disk drive # of output UV (FITS or AIPS) NO default
             0 FITS => current directory
  Compress...If True  the output data is written in
             compressed format which can result in a substantial
             reduction in disk space needed.  
  nThreads...If the Obit libraries are compiled with multiple
             thread operation enabled, this parameter sets the 
             number of threads that can be used for parallel 
             operations. 
             NB: This only improves performance if there are 
             multiple processors and/or cores in the host.
  taskLog....Log file to write messages to INSTEAD of the terminal
             This is useful in long runs or batch files where
             a bug in the ObitTalk message handling may cause
             tasks to hang.  Path is absolute or relative to where
             the task executes.
  noScrat....A list of AIPS disk numbers on which you do not 
             wish scratch files
----------------------------------------------------------------
XYSim:

                          PURPOSE

     This task is used to generate specimen u-v coverage for
an interferometric array, given an array configuration
specified by the user.  
                           LIMITATIONS

    At present, the program is mainly applicable only to compact
array configurations - as opposed, say, to VLBI arrays.  It
assumes, for example, that the elevation angles of all array
elements are identical.  However, it is expected that minor
embellishments will be added to XYSim, removing such
restrictions as the need arises.

                 MeerKAT Antenna locations


# MeerKAT - 3 faked
xysim.nAnts=64
xysim.arrayXYZ = [0.,0.,0.]
xysim.antXYZ = [ \
 5109224.283301013, 2006790.3483094547, -3239100.604320229, \
 5109237.640024388, 2006805.6770051755, -3239069.994639923, \
 5109224.985290346, 2006765.0013315917, -3239115.198221187, \
 5109247.714531837, 2006736.9651357005, -3239096.134429162, \
 5109244.688096248, 2006674.4233089031, -3239139.814592948, \
 5109222.761061018, 2006688.9484979499, -3239165.941678994, \
 5109186.503772581, 2006764.8004743350, -3239176.683379928, \
 5109162.049436264, 2006678.5275646586, -3239269.234862076, \
 5109101.142307949, 2006650.3768302964, -3239383.320362962, \
 5109132.821188024, 2006798.0653944947, -3239242.190600952, \
 5109046.342502975, 2006823.9822289452, -3239363.792060026, \
 5109122.966505559, 2006849.6913770945, -3239225.880242085, \
 5109095.033270914, 2006898.8926780800, -3239239.950731310, \
 5109048.219153944, 2006984.4747398752, -3239261.955491176, \
 5109082.896426823, 2007045.2360368862, -3239169.092590792, \
 5109139.532732022, 2006992.2481664552, -3239111.376665838, \
 5109127.053829635, 2007070.6272137782, -3239082.803058830, \
 5109193.739832591, 2007001.7000286535, -3239019.087335018, \
 5109193.739832591, 2007001.7000286535, -3239019.087335018, \
 5109122.957919767, 2006942.9166610728, -3239168.360293513, \
 5109142.920171080, 2006871.5004450388, -3239180.654566211, \
 5109272.060969057, 2006500.0158820950, -3239203.487756617, \
 5109454.063977370, 2006488.7376120023, -3238920.412946481, \
 5109368.624113217, 2006509.6444146344, -3239043.724646858, \
 5109516.480263147, 2006536.8423758876, -3238791.431322792, \
 5109490.752296306, 2006708.3789305324, -3238726.608870378, \
 5109490.752296306, 2006708.3789305324, -3238726.608870378, \
 5109293.292816287, 2006869.8171357024, -3238941.795680574, \
 5109296.303268595, 2006772.5295984817, -3238996.839909400, \
 5109292.534156264, 2006730.6715709814, -3239028.632757797, \
 5109310.291273826, 2007017.0281266046, -3238823.744517887, \
 5109273.321065790, 2007083.3921748984, -3238841.202815257, \
 5109233.604611379, 2007298.4686883173, -3238770.866969546, \
 5109514.197187321, 2007536.9635495418, -3238177.042400312, \
 5109175.830745950, 2007164.6174351824, -3238946.915646899, \
 5109093.991332070, 2007162.9219029557, -3239078.774460578, \
 5109093.991332070, 2007162.9219029557, -3239078.774460578, \
 5108965.296001360, 2007106.0701933966, -3239319.103953036, \
 5108973.980339987, 2006930.0852240500, -3239413.365246235, \
 5108948.627397791, 2006963.5741833895, -3239433.449556823, \
 5108993.649853685, 2006679.7833106574, -3239536.371571853, \
 5109111.471675909, 2006445.9864307950, -3239491.956582489, \
 5109233.142973563, 2006414.0918562417, -3239318.095274873, \
 5109486.398941563, 2006225.4845277579, -3239031.012788490, \
 5109925.485333597, 2006111.8310199678, -3238401.389946346, \
 5110109.881251845, 2005177.8982822236, -3238688.711248541, \
 5110676.486888749, 2005793.1523864232, -3237408.158759383, \
 5109284.531903354, 2006201.5866797022, -3239366.632053003, \
 5111608.046869015, 2004721.2048303143, -3236602.973427059, \
 5110840.852511231, 2003560.0426021100, -3238544.122691035, \
 5109666.439433716, 2004767.9238966587, -3239646.108266412, \
 5109264.137436534, 2005901.3903951300, -3239583.343220228, \
 5108992.208679046, 2006070.7636846653, -3239910.941493260, \
 5108701.441647091, 2006603.9263298218, -3240047.188720951, \
 5108767.237976139, 2007556.5394489064, -3239354.535753695, \
 5108927.449249233, 2007973.7951580040, -3238840.154879346, \
 5108955.986149195, 2008411.1246356352, -3238520.346383022, \
 5110746.306898989, 2007713.6046778432, -3236109.839809620, \
 5109561.451856036, 2009946.0949836060, -3236606.077599791, \
 5108335.404035097, 2010410.6877686752, -3238271.570185661, \
 5107206.799418732, 2009680.8124996074, -3240512.455520035, \
 5108231.345108390, 2006391.5921877003, -3240926.753493093, \
 5108666.768357071, 2005032.4718307700, -3241081.697311663, \
 5109701.312267562, 2003312.6873203174, -3240508.721915218 \
]
