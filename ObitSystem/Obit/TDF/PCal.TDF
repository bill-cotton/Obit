; $Id$
; PCal
;---------------------------------------------------------------
;! Obit Radio interferometry instrumental polarization calibration
;# Task Obit Imaging calibration
;-----------------------------------------------------------------------
;;  Copyright (C) 2012-2015
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning Obit should be addressed as follows:
;;         Internet email: bcotton@nrao.edu.
;;         Postal address: W. D. Cotton
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
PCal      LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
PCal:     Instrumental polarization calibration
**PARAM** str 4
DataType                            "FITS" or "AIPS" type of input
**PARAM** str 48
inFile                              FITS input uvdata if Type=='FITS'
**PARAM** str 12
inName                              Input multisource UV data AIPS
**PARAM** str 6
inClass                             Input UV data (class)
**PARAM** int 1
inSeq                               Input UV data (seq. #)
**PARAM** int 1
inDisk                              Input UV data disk drive #
**PARAM** str 16 10
Sources                             Calibrator sources (pointings) list
**PARAM** int 1 **DEF** -1
Qual            -10.0               Source qualifier -1=>any
**PARAM** str 4
souCode                             Calibrator code '    '=>any
**PARAM** float 2
timeRange                           Time range to process.
**PARAM** float 2
UVRange         0.                  Min & max baseline (klambda)
**PARAM** int 1
FreqID                              Freq. ID to select.
**PARAM** int 1 **DEF** 1
BIF               1.0      100.0    Lowest IF number 0=>all
**PARAM** int 1
EIF               0.0      100.0    Highest IF number 0=>all
**PARAM** int 1 **DEF** 1
BChan            1.0     8192.0     Low freq. channel
**PARAM** int 1
EChan            0.0     8192.0     Highest freq channel, 0=>all
**PARAM** int 1
subA                                Subarray
**PARAM** int 50
Antennas         0.0     1000.0     List of antennas to calibrate
**PARAM** int 1
doCalib          -1         10      Apply calibration table
**PARAM** int 1
gainUse                             CL/SN table to apply
**PARAM** int 1
doBand           -1.0       10.0    If >0.5 apply bandpass cal.
**PARAM** int 1
BPVer                               Bandpass table version
**PARAM** int 1 **DEF** -1
flagVer                             Flag table version
                                      
                                       Source model info
**PARAM** str 4
DataType2                           "FITS" or "AIPS" type of model
**PARAM** str 48
in2File                             FITS input image if Type=='FITS'
**PARAM** str 12
in2Name                             Cleaned map name (name)
**PARAM** str 6
in2Class                            Cleaned map name (class)
**PARAM** int 1
in2Seq            0.0     9999.0    Cleaned map name (seq. #)
**PARAM** int 1
in2Disk                             Cleaned map disk unit #
**PARAM** int 1   **DEF** 0
nfield            0.0     4192.0    No. maps to use for model.
                                    0 => use fluxes in SU table
**PARAM** int 1
CCVer            -1.0    46655.0    CC file version #.
**PARAM** int 64
BComp                               First CLEAN comp to use.
                                    1 per field.
**PARAM** int 64
EComp                               Last CLEAN comp to use.
                                    to use (0 => all)
**PARAM** str 4
Cmethod                             Modeling method:
                                    'DFT','GRID','    '
**PARAM** str 4
Cmodel                              Model type: 'COMP','IMAG'
**PARAM** float 1
Flux                                Lowest CC component used.
**PARAM** float 1  
modelFlux        0.0                Model flux density (Jy)
**PARAM** float 2  
modelPos        0.0                 Model position offset (asec)
**PARAM** float 4  
modelParm                           Model parameters (maj, min, pa, type)
**PARAM** float 10  **DEF** -999.
RLPhase       -4000.      400.      R-L phase difference per calibrator
**PARAM** float 10  **DEF** 0.0
RM                                  Rotation measure, per calibrator
**PARAM** float 10  **DEF** 0.0
PPol          0.0          1.0      Fract lin poln per calibrator
**PARAM** float 1   **DEF** 0.0
XPhase        0.0          1.0      Cross hand phase difference (deg)
                                       
                                       Calibration info
**PARAM** str 4  **DEF** LM
solnType                            Solution type:'LM  '
**PARAM** boo 10 **DEF** T
doFitPol                            If True fit source lin. poln, per cal
**PARAM** boo 10 **DEF** F
doFitI                              If True fit Stokes I poln, per cal
**PARAM** boo 10 **DEF** F
doFitV                              If True fit Stokes V poln, per cal
**PARAM** boo 1 **DEF** F
doFitRL                             If True fit R-L phase of gain per ant.
**PARAM** boo 1 **DEF** T
doFitGain                           If True fit X,Y gains per ant.
**PARAM** boo 1 **DEF** T
doFitOri                            If True Orientation per ant.
**PARAM** int 1 **DEF** 1
ChWid            0.0                Number of channels in poln soln
**PARAM** int 1 **DEF** 1
ChInc            0.0                Channel increment in poln soln
**PARAM** int 1 **DEF** 1
CPSoln                              CP (source) table to write
**PARAM** int 1 **DEF** 0
BPSoln                              BP (bandpass) table to write
**PARAM** int 1 **DEF** 1
PDSoln                              PD (antenna) table to write
**PARAM** boo 1 **DEF** T
doBlank                             Blank failed solutions
**PARAM** int 1
refAnt            0                 Reference antenna
**PARAM** float 1
solInt            0.0               Data averaging interval (min)
                                    
**PARAM** int 1
prtLv             0.0               Print level in cal
**PARAM** int 1 **DEF** 1
nThreads            0               Max. number of threads to use
**PARAM** str 128
taskLog                             Logfile to write task messages to
**PARAM** int 10
noScrat                             AIPS disk numbers for which
                                    scratch files are disallowed
----------------------------------------------------------------
PCal Instrumental polarization calibration
Type:  Task
 Use:  Polarization calibration of radio interferometry data

This program determines on-axis instrumental polarization 
parameters per channel using calibrator observations.
For point source calibrators the source polarization can be solved 
for or the polarization angle and fractional polarization 
constrained.  Up to 10 calibrators can be used but solution for 
the source polarization requires a spread of the observed 
parallactic angles for at least some.
   For a single resolved source a full source model may be given.
Multiple channels may be averaged in a sliding window ChWid channels 
wide if needed to improve sensitivity.
   Fitted results, feed ellipticity and orientation,  are written 
into an AIPS PD (instrumental parameters) and a CP (source 
polarization) table and can be applied in subsequent processing. 
R/L (X/Y) phase differences are written into a BP table.
   Solutions involve one or two phases; the first a relaxation 
fitting optionally followed by a Levenberg-Marquardt least
squares.  The latter is somewhat more accurate but can be quite 
slow.

NOTES:
 1) For arrays with circular feeds, the parallactic angle
corrections MUST be made prior to any other calibration steps 
determining phases from the data.
 2) May (probably) not work for linear feeds.
 3) Dividing by a source model will help for the atmospheric 
calibration but may confuse the polarization calibration and the 
flux density will be different than in the SU table.
Solving for IPol flux may help in this case.
 4) For the first run in a ginve output PD table, BChan and BIF 
must =1, otherwise the output table will not be written. 
Subsequent runs may restart with higher values.


Adverbs:
  DataType..'FITS' or 'AIPS'  type of input
  inFile.....FITS input uvdata if Type=='FITS'
  inName.....Input multisource UV data file
  inClass....Input UV data file (class).      Standard defaults.
  inSeq......Input UV data file (seq. #).     0 => highest.
  inDisk.....Input UV data file disk drive #.

       Data selection
  Sources....List of calibrators (pointings) to be processed.
             '*' or blank = all; a "-" before a source name
             means all except ANY source named. 
  Qual.......Only sources with a source qualifier number in the
             SU table matching Qual will be used if Qual is not
             -1.  
  souCode....Calibrators may be selected on the basis of the
             calibrator code given in the SU table.
                  '    ' => any calibrator code selected
                  '*   ' => any non blank code (cal. only)
                  '-CAL' => blank codes only (no calibrators)
                  anything else = calibrator code to select.
             NB: The souCode test is applied in addition to the
             other tests, i.e. Sources and Qual, in the
             selection of sources to process.
  timeRange..Start and end times (day)
             Use  dhms2day to convert from human readable form
  UVRange....(Minimum,Maximum) baseline (kilo-lambda) to include

  BIF........First IF to process. 0=>1
  EIF........Highest IF to process 0=> do BIF to highest.
  BChan......First channel number to include, 0=>1.  Channel numbers are 1
             relative as defined in the input data file.
  EChan......Highest channel number to to include,  0 => max 
  FreqID.....Frequency identifier to select (you may determine which is
             applicable from the opType='SCAN' listing produced by
             Lister).  0=> any.
  subA.......Sub-array number to use. 0=>all.
  Antennas...A list of the antennas to  have solutions
             determined. If any number is negative then all
             antennas listed  are NOT to be used to determine
             solutions and all others are. All 0 => use all.
  doCalib....If true, apply SN or CL table
  gainUse....CL/SN table version number to apply. 0=> highest.
  doBand.....If > 0 then correct the data for the shape of the
             antenna bandpasses using the (prior) BP table specified 
             by BPVer.  The correction has five modes:
             (a) if DOBAND=1 all entries for an antenna in the table
             are averaged together before correcting the data.
             (b) if DOBAND=2 the entry nearest in time (including
             solution weights) is used to correct the data.
             (c) if DOBAND=3 the table entries are interpolated in
             time (using solution weights) and the data are then
             corrected.
             (d) if DOBAND=4 the entry nearest in time (ignoring
             solution weights) is used to correct the data.
             (e) if DOBAND=5 the table entries are interpolated in
             time (ignoring solution weights) and the data are then
             corrected.
  BPVer......Specifies the version of the BP table to be applied
                0 => highest numbered table.
               <0 => no prior bandpass correction to be applied.
  flagVer....FG table to use for editing. 0 => highest.

      Model
  DataType2.'FITS' or 'AIPS'  type of input, defaults to DataType
  in2Name....Model map name (name).      Standard defaults.
  in2Class...Model map name (class).     Standard defaults.
  in2Seq.....Model map name (seq. #).    0 => highest.
  in2Disk....Disk drive # of model map.  0 => any.
  in2File....FITS input root if Type=='FITS'
             Any digits should be left off the end of the name as 
             the 0-rel field number is added (no leading zeroes).
  nfield.....Number of image files to use for model.  If more than one
             file is to be used, the Name, Class, Disk and Seq of the
             subsequent image files will be the same as the first file
             except that the LAST four characters of the Class will be
             '0001' thru '4191' for files number 2 thru 4192.  
             Maximum 4192.
             NOTE: 0 => ignore in2name etc. and use flux densities in 
             source table.
  CCVer......CC file ver. number.          0 => highest.
  BComp......The first clean component to process. One value is
             specified for each field used.
  EComp......highest CLEAN comps. to use for model. ALL 0 => all.
             This array has one value per field up to 64 fields.  All
             components are used for fields > 64.
             If any EComp[i] < 0, then components are only used up to
             the first negative in each field.
  Cmethod....This determines the method used to compute the
             model visibility values.
             'DFT' uses the direct Fourier transform, this
             method is the most accurate.
             'GRID' does a gridded-FFT interpolation model
             computation.
             '    ' allows the program to use the fastest
             method.
  Cmodel.....This indicates the type of input model; 'COMP' means that
             the input model consists of Clean components, 'IMAG'
             indicates that the input model consists of images.  If
             Cmodel is '   ' Clean components will be used if present
             and the image if not.  Note that Clean images do not make
             good models.  The Clean components have been convolved with
             the Gaussian Clean beam making their Fourier transform be
             rather tapered compared to the original uv data.
  Flux.......Only components > Flux are used in the model.
  modelFlux..If this value is larger than 0 then an initial calibration
             using the model specified in modelFlux, modelPos, modelParm
             is made.  modelFlux is the flux density of the model
  modelPos...RA and Dec offset in the sky in asec
  modelparm..Other model parameters Gaussian:
             major_axis (asec),  minor_axis (asec),  position_angle (deg),
  RLPhase....The target value of the R-L phase difference at the data 
             reference frequency. (deg)  One value per calibrator.
  RM.........NYI The rotation measure (rad/m^2) used to convert RLPhase
             to other frequencies. One value per calibrator.
  PPol.......Fractional linear polarization of calibrators
  XPhase.....Cross hand phase difference [deg]

      Calibration control
  solnType...Solution type:'LM  ' 
            'LM  ' => Initial fitting using a relaxation technique 
             followed by tweaking using a Levenberg-Marquardt least 
             squares.  Otherwise only the relaxation technique.
             'LM  " can give a slightly better fit but can be very slow.
  doFitPol...If True, fit for corresponding source in Sources
             polarization parametrers.  One per Source.
             If False polarization fixed at (0,i0)
  doFitI.....If True fit for Stokes I, one per source
  doFitV.....If True fit for Stokes V, one per source
  doFitRL....If True, fit for global R-L (X-Y) phase  difference
             per block of channels, otherwise use XPhase for all.
  doFitGain..If True, fit for X & Y gains per per antenna and
             channel.  Generally needed for linear feeds.
  doFitOri...If True, fit feed orientations.  For linear feeds 
             with no calibrator with a specified RLPhase, it may
             be useful to set this to False
  ChWid......If >0, The calibration will use ChWid channels 
             centered on each channel, should be odd.
  ChInc......Increment between center channel in solution,
             Should not be less than ChWid
  CPSoln.....Source (CP) table to write, 0=> create new
  PDSoln.....Instrumental (PD) table to write, 0=> create new
  BPSoln.....Bandpass (BP) table to write, 0=> create new
             If doBand is true then BP table BPVer will be updated
             with the RL Phase solutions and written to BPSoln.
  doBlank....Blank failed solutions? else write default parameters 
             in the output PD and BP tables
  refAnt.....Reference antenna number.  If not given no reference 
             antenna will be used.
  solInt.....Data is averaged for this long (min)

  prtLv......Print level in solution, 0=>none 
  nThreads...If the Obit libraries are compiled with multiple
             thread operation enabled, this parameter sets the 
             number of threads that can be used for parallel 
             operations in the model calculation.
             NB: This only improves performance if there are 
             multiple processors and/or cores in the host.
             Values higher than 1 MAY be helpful if many data are
             being used in the fit but may otherwise slow down 
             the processing.
  taskLog....Log file to write messages to INSTEAD of the terminal
             This is useful in long runs or batch files.
             Path is absolute or relative to where the task 
             executes.
  noScrat....A list of AIPS disk numbers on which you do not 
             wish scratch files
----------------------------------------------------------------
PCAL:  Task to determine effective feed polarization parameters.
Documentor: W. D. Cotton (preliminary version).
Related Programs: Calib, RLDly, RLPass, Split, Splat

     Polarization calibration of synthesis array visibility
data consists of two distinct parts: 1) the determination of
the effective response of the feed to the incident radiation
and the correction of the observations to the values which
would have been obtained with perfect feeds and 2) the
determination and removal of systematic phase delay differences
between the right and left hand polarization systems.  PCal
determines the effective response of the feeds, the
polarization of unknown calibrator(s) and stores this
information in the PD and CP tables.  Routines which can apply
calibration tables can then be instructed to apply the
polarization corrections by setting the adverb `doPol=True 
and PDVer = PD table number.

     If the systematic phase delay differences between the
right and left hand systems is time variable (e.g. variable
ionispheric Faraday rotation) then these effects need to be
removed before running PCal (see AIPS/CLCOR).  Correction of
R-L delay and phase difference can be determined using 
RLDly and RLPass.


Parallactic angle correction:

     PCal expects that the input has had the parallactic angle 
removed from the phase of the cross hand visibility data.  
This correction cal be made using task CLCor and 
corMode="PANG".


