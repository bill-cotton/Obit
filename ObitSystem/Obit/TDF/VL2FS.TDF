;VL2VZ
;---------------------------------------------------------------
;! Convert VL table to FS table
;# Task Obit Table 
;-----------------------------------------------------------------------
;;  Copyright (C) 2012
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning Obit should be addressed as follows:
;;         Internet email: bcotton@nrao.edu
;;         Postal address: W. D. Cotton
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
VL2FS     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
VL2FS     Convert VL table to FS table, filter
**PARAM** str 4
DataType                           "FITS" or "AIPS" type of input
**PARAM** str 48
inFile                              FITS input image if Type=='FITS'
**PARAM** str 12
inName                             Input image file name (name)
**PARAM** str 6
inClass                            Input image file name (class)
**PARAM** int 1
inSeq             0.0     9999.0   Input image file name (seq. #)
**PARAM** int 1
inDisk            0.0        9.0   Input image file disk unit #
**PARAM** int 1  **DEF** 1
inVL                               Input VL table; 0=>highest
**PARAM** str 48
outFile                            FITS output image if Type=='FITS'
**PARAM** str 12
outName                            Output image cube name (name)
**PARAM** str 6
outClass                           Output image cube name (class)
**PARAM** int 1
outSeq             0.0     9999.0  Output image cube name (seq. #)
**PARAM** int 1
outDisk            0.0        9.0  Output image cube disk unit #
**PARAM** int 1 
outFS                              Output FS table; 0=>highest
**PARAM** str 128
OutPrint                           Printer disk file to save
**PARAM** float 1  **DEF** 0.0
minFlux                            Minimum acceptable flux density (Jy)
**PARAM** float 1  **DEF** 5.0
minSNR                             Minimum acceptable SNR
**PARAM** int   1  **DEF** 50
RMSsize                            Size of region to determine RMS
**PARAM** boo 1 **DEF** T
doVL2FS                            Convert VL to FS table?
**PARAM** boo 1 **DEF** T
doSpec                             Get spectrum from out image
**PARAM** boo 1 **DEF** T
doFit                              Fit velocity from spectrum
**PARAM** boo 1 **DEF** T
doPrint                            Print FS table FSVer+1
**PARAM** str 128
taskLog                            Logfile to write task messages to
----------------------------------------------------------------
VL2FS
Task:  This task Converts a VL table to a FS table.
An FS table is like a VL table except with a spectrum attached.
The spectrum is derived from planes in the output image and the 
FS table will be attached to the output.
   The final FS table will be the highest numbered one on the input 
data file.

Adverbs:
  inName.....Input image file name (name).      Standard defaults.
  inClass....Input image file name (class).     Standard defaults.
  inSeq......Input image file name (seq. #).    0 => highest.
  inDisk.....Disk drive # of input image file.  0 => any.
  inVL.......Input VL table version number to process.
             0 => highest number
  outName....Output image cube name (name).      Standard defaults.
  outClass...Output image cube name (class).     Standard defaults.
  outSeq.....Output image cube name (seq. #).    0 => highest.
  outDisk....Disk drive # of output image file.  0 => any.
  outVL......Input VL table version number to process.
             0 => highest number+1
  OutPrint....Disk file name in which to save the output.
              ' ' => display on terminal.
              When OutPrint is not blank, multiple outputs are
              concatenated and the file is not actually printed.
  minFlux.....Minimum acceptable flux density of line (Jy).
  minSNR......Minimum acceptable SNR of line
  RMSsize.....If > 1, then the half width of a square box centered
              on each source within which to determine the local 
              noise.  This is used when an MF table is converted
              to a VL table. 0=> use whole image.
              The RMS is determined using a histogram analysis
              which should be relatively insensitive to sources.
              Values less than 10 are probably a bad idea.
  doVL2FS....Convert VL table on input to FS table on output.
  doSpec.....Extract spectrum from output image and save in FS 
             table FSver
  doFit......Fit velocities/filter FS table FSver on output
             to FSver+1
  doPrint....Print contents of FS table FSver+1 to OutPrint
  taskLog....Log file to write messages to INSTEAD of the terminal
             This is useful in long runs or batch files where
             a bug in the ObitTalk message handling may cause
             tasks to hang.  Path is absolute or relative to where
             the task executes.
----------------------------------------------------------------
