/* $Id$   */
/* DO NOT EDIT - file generated by ObitTables.pl                      */
/*--------------------------------------------------------------------*/
/*;  Copyright (C)  2013                                              */
/*;  Associated Universities, Inc. Washington DC, USA.                */
/*;                                                                   */
/*;  This program is free software; you can redistribute it and/or    */
/*;  modify it under the terms of the GNU General Public License as   */
/*;  published by the Free Software Foundation; either version 2 of   */
/*;  the License, or (at your option) any later version.              */
/*;                                                                   */
/*;  This program is distributed in the hope that it will be useful,  */
/*;  but WITHOUT ANY WARRANTY; without even the implied warranty of   */
/*;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    */
/*;  GNU General Public License for more details.                     */
/*;                                                                   */
/*;  You should have received a copy of the GNU General Public        */
/*;  License along with this program; if not, write to the Free       */
/*;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,     */
/*;  MA 02139, USA.                                                   */
/*;                                                                   */
/*;Correspondence about this software should be addressed as follows: */
/*;         Internet email: bcotton@nrao.edu.                         */
/*;         Postal address: William Cotton                            */
/*;                         National Radio Astronomy Observatory      */
/*;                         520 Edgemont Road                         */
/*;                         Charlottesville, VA 22903-2475 USA        */
/*--------------------------------------------------------------------*/
%{
#include "Obit.h"
#include "ObitData.h"
#include "ObitTableAN.h"
%}
 
%inline %{
 
extern ObitTable* TableAN (ObitData *inData, long *tabVer,
 	                   int access,
 	                   char *tabName,
                           int numIF, int numOrb, int numPCal,
                           ObitErr *err)
 {
   ObitIOAccess laccess;
   /* Cast structural keywords to correct type */
   oint lnumIF = (oint)numIF;
   oint lnumOrb = (oint)numOrb;
   oint lnumPCal = (oint)numPCal;
   olong ltabVer = (olong)*tabVer;
   ObitTable *outTable=NULL;
   laccess = OBIT_IO_ReadOnly;
   if (access==2) laccess = OBIT_IO_WriteOnly;
   else if (access==3) laccess = OBIT_IO_ReadWrite;
   outTable = (ObitTable*)newObitTableANValue ((gchar*)tabName, inData, (olong*)&ltabVer,
   			   laccess, 
                           lnumIF, lnumOrb, lnumPCal,
                           err);
   *tabVer = (long)ltabVer;
   return outTable;
   }
 
extern PyObject* TableANGetHeadKeys (ObitTable *inTab) {
  PyObject *outDict=PyDict_New();
  ObitTableAN *lTab = (ObitTableAN*)inTab;
  PyDict_SetItemString(outDict, "numIF",  PyInt_FromLong((long)lTab->numIF));
  PyDict_SetItemString(outDict, "numOrb",  PyInt_FromLong((long)lTab->numOrb));
  PyDict_SetItemString(outDict, "numPCal",  PyInt_FromLong((long)lTab->numPCal));
  PyDict_SetItemString(outDict, "revision",  PyInt_FromLong((long)lTab->revision));
  PyDict_SetItemString(outDict, "ArrayX",  PyFloat_FromDouble((double)lTab->ArrayX));
  PyDict_SetItemString(outDict, "ArrayY",  PyFloat_FromDouble((double)lTab->ArrayY));
  PyDict_SetItemString(outDict, "ArrayZ",  PyFloat_FromDouble((double)lTab->ArrayZ));
  PyDict_SetItemString(outDict, "GSTiat0",  PyFloat_FromDouble((double)lTab->GSTiat0));
  PyDict_SetItemString(outDict, "DegDay",  PyFloat_FromDouble((double)lTab->DegDay));
  PyDict_SetItemString(outDict, "Freq",  PyFloat_FromDouble((double)lTab->Freq));
  PyDict_SetItemString(outDict, "RefDate", PyString_InternFromString(lTab->RefDate));
  PyDict_SetItemString(outDict, "PolarX",  PyFloat_FromDouble((double)lTab->PolarX));
  PyDict_SetItemString(outDict, "PolarY",  PyFloat_FromDouble((double)lTab->PolarY));
  PyDict_SetItemString(outDict, "ut1Utc",  PyFloat_FromDouble((double)lTab->ut1Utc));
  PyDict_SetItemString(outDict, "dataUtc",  PyFloat_FromDouble((double)lTab->dataUtc));
  PyDict_SetItemString(outDict, "TimeSys", PyString_InternFromString(lTab->TimeSys));
  PyDict_SetItemString(outDict, "ArrName", PyString_InternFromString(lTab->ArrName));
  PyDict_SetItemString(outDict, "XYZHand", PyString_InternFromString(lTab->XYZHand));
  PyDict_SetItemString(outDict, "FRAME", PyString_InternFromString(lTab->FRAME));
  PyDict_SetItemString(outDict, "FreqID",  PyInt_FromLong((long)lTab->FreqID));
  PyDict_SetItemString(outDict, "iatUtc",  PyFloat_FromDouble((double)lTab->iatUtc));
  PyDict_SetItemString(outDict, "polType", PyString_InternFromString(lTab->polType));
  PyDict_SetItemString(outDict, "P_Refant",  PyInt_FromLong((long)lTab->P_Refant));
  PyDict_SetItemString(outDict, "P_Diff01",  PyFloat_FromDouble((double)lTab->P_Diff01));
  PyDict_SetItemString(outDict, "P_Diff02",  PyFloat_FromDouble((double)lTab->P_Diff02));
  PyDict_SetItemString(outDict, "P_Diff03",  PyFloat_FromDouble((double)lTab->P_Diff03));
  PyDict_SetItemString(outDict, "P_Diff04",  PyFloat_FromDouble((double)lTab->P_Diff04));
  PyDict_SetItemString(outDict, "P_Diff05",  PyFloat_FromDouble((double)lTab->P_Diff05));
  PyDict_SetItemString(outDict, "P_Diff06",  PyFloat_FromDouble((double)lTab->P_Diff06));
  PyDict_SetItemString(outDict, "P_Diff07",  PyFloat_FromDouble((double)lTab->P_Diff07));
  PyDict_SetItemString(outDict, "P_Diff08",  PyFloat_FromDouble((double)lTab->P_Diff08));

  return outDict;
} 

extern void TableANSetHeadKeys (ObitTable *inTab, PyObject *inDict) {
  ObitTableAN *lTab = (ObitTableAN*)inTab;
  char *tstr;
  int lstr=MAXKEYCHARTABLEAN;

  lTab->revision = (oint)PyInt_AsLong(PyDict_GetItemString(inDict, "revision"));
  lTab->ArrayX = (odouble)PyFloat_AsDouble(PyDict_GetItemString(inDict, "ArrayX"));
  lTab->ArrayY = (odouble)PyFloat_AsDouble(PyDict_GetItemString(inDict, "ArrayY"));
  lTab->ArrayZ = (odouble)PyFloat_AsDouble(PyDict_GetItemString(inDict, "ArrayZ"));
  lTab->GSTiat0 = (odouble)PyFloat_AsDouble(PyDict_GetItemString(inDict, "GSTiat0"));
  lTab->DegDay = (odouble)PyFloat_AsDouble(PyDict_GetItemString(inDict, "DegDay"));
  lTab->Freq = (odouble)PyFloat_AsDouble(PyDict_GetItemString(inDict, "Freq"));
  tstr = PyString_AsString(PyDict_GetItemString(inDict, "RefDate"));
  strncpy (lTab->RefDate, tstr, lstr); lTab->RefDate[lstr-1]=0;
  lTab->PolarX = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "PolarX"));
  lTab->PolarY = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "PolarY"));
  lTab->ut1Utc = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "ut1Utc"));
  lTab->dataUtc = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "dataUtc"));
  tstr = PyString_AsString(PyDict_GetItemString(inDict, "TimeSys"));
  strncpy (lTab->TimeSys, tstr, lstr); lTab->TimeSys[lstr-1]=0;
  tstr = PyString_AsString(PyDict_GetItemString(inDict, "ArrName"));
  strncpy (lTab->ArrName, tstr, lstr); lTab->ArrName[lstr-1]=0;
  tstr = PyString_AsString(PyDict_GetItemString(inDict, "XYZHand"));
  strncpy (lTab->XYZHand, tstr, lstr); lTab->XYZHand[lstr-1]=0;
  tstr = PyString_AsString(PyDict_GetItemString(inDict, "FRAME"));
  strncpy (lTab->FRAME, tstr, lstr); lTab->FRAME[lstr-1]=0;
  lTab->FreqID = (oint)PyInt_AsLong(PyDict_GetItemString(inDict, "FreqID"));
  lTab->iatUtc = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "iatUtc"));
  tstr = PyString_AsString(PyDict_GetItemString(inDict, "polType"));
  strncpy (lTab->polType, tstr, lstr); lTab->polType[lstr-1]=0;
  lTab->P_Refant = (oint)PyInt_AsLong(PyDict_GetItemString(inDict, "P_Refant"));
  lTab->P_Diff01 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff01"));
  lTab->P_Diff02 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff02"));
  lTab->P_Diff03 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff03"));
  lTab->P_Diff04 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff04"));
  lTab->P_Diff05 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff05"));
  lTab->P_Diff06 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff06"));
  lTab->P_Diff07 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff07"));
  lTab->P_Diff08 = (ofloat)PyFloat_AsDouble(PyDict_GetItemString(inDict, "P_Diff08"));

  if ((lTab->myDesc->access==OBIT_IO_ReadWrite) || (lTab->myDesc->access==OBIT_IO_WriteOnly)) 
    lTab->myStatus = OBIT_Modified;
} 

%}
