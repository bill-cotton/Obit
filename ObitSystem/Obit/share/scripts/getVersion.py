# This script makes the svn revision available to Obit.
#
# A call is made to svnversion to obtain the svn revision in directory $OBIT.
# Environment variable $OBIT must be defined, or the path to the Obit directory
# passed as a command line parameter.  The value returned by svnversion is 
# written to ObitVersion.c, unless ObitVersion.c already contains the up-to-date 
# version. Care is taken to avoid modifying ObitVersion.c (and hence recompiling 
# the Obit library, tasks, and python interface) unless necessary. Care is also 
# taken to ensure that ObitVersion.c is not counted as a modified file when 
# svnversion is invoked.
#
# After updating ObitVersion.c, it must be compiled, the Obit library rebuilt, 
# and the python code rebuilt to link the new library to the SWIG C-Python
# interface.
#

import os, os.path, re, sys

OBIT = '' # path to Obit directory
filename = '/src/ObitVersion.c' # C file that holds version
tempFile = filename + '.tmp'
ver = '' # Obit version string

# Get full path to filename and tempFile
if 'OBIT' in os.environ:
    OBIT = os.environ['OBIT']
else:
    OBIT = sys.argv[1]
filename = OBIT + filename
tempFile = OBIT + tempFile

verOrig = '' # previous version stored in filename
if os.path.exists( filename ):
    # Get the svn revision written previously to ObitVersion.c
    f = open( filename, 'r' )
    txt = f.read()
    f.close()
    matchstr = re.compile('"(.*)"') # get first text in quotes
    groups = re.findall( matchstr, txt )
    verOrig = groups[0]
    # Save the original file
    cmd = 'cp -pv ' + filename + ' ' + tempFile # copy and preserve timestamps
    f = os.popen(cmd)
    print f.read(),

# Revert original file so svnversion does not see it as modified
cmd = 'svn revert ' + filename 
f = os.popen(cmd)
print f.read(),

# Get revision number
cmd = 'svnversion -n ' + OBIT 
f = os.popen(cmd)
ver = f.read()
print('Obit version is ' + ver)

if ( verOrig and verOrig == ver ):
    print "Obit version in ObitVersion.c is already up to date."
    cmd = 'cp -pv ' + tempFile + ' ' + filename
    f = os.popen(cmd)
    print f.read(),
    #os.remove(tempFile)
    sys.exit() # terminate script

# Write ObitVersion.c 
f = open( filename, 'w' )
txt = """
// This file generated by getVersion.py
// Obit version (svn revision) at build time

#include <ObitVersion.h>

const char *const version = \"""" + ver + """\";

char *ObitVersion (void)
{
    char *ver;
    ver = strdup( version );
    return ver;
}
"""
f.write(txt)
f.close()

# Remove tempFile
if os.path.exists(tempFile):
    os.remove(tempFile)
print 'Obit version written to ' + filename
